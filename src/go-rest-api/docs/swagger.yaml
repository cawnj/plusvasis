definitions:
  echo.HTTPError:
    properties:
      message: {}
    type: object
  plusvasis_internal_templates.NomadJob:
    properties:
      containerName:
        type: string
      cpu:
        maximum: 1000
        minimum: 0
        type: integer
      dockerImage:
        type: string
      env:
        items:
          items:
            type: string
          type: array
        type: array
      envString:
        type: string
      expose:
        type: boolean
      memory:
        maximum: 2000
        minimum: 0
        type: integer
      port:
        maximum: 65535
        minimum: 0
        type: integer
      shell:
        type: string
      user:
        type: string
      volumes:
        items:
          items:
            type: string
          type: array
        type: array
    required:
    - containerName
    - dockerImage
    - shell
    - user
    type: object
  structs.GenericResponse:
    properties:
      index:
        description: This is the index associated with the write
        type: integer
    type: object
  structs.JobChildrenSummary:
    properties:
      dead:
        type: integer
      pending:
        type: integer
      running:
        type: integer
    type: object
  structs.JobDeregisterResponse:
    properties:
      evalCreateIndex:
        type: integer
      evalID:
        type: string
      index:
        description: This is the index associated with the read
        type: integer
      jobModifyIndex:
        type: integer
      knownLeader:
        description: Used to indicate if there is a known leader node
        type: boolean
      lastContact:
        allOf:
        - $ref: '#/definitions/time.Duration'
        description: |-
          If AllowStale is used, this is time elapsed since
          last contact between the follower and leader. This
          can be used to gauge staleness.
      nextToken:
        description: |-
          NextToken is the token returned with queries that support
          paginated lists. To resume paging from this point, pass
          this token in the next request's QueryOptions.
        type: string
      volumeEvalID:
        type: string
      volumeEvalIndex:
        type: integer
    type: object
  structs.JobListStub:
    properties:
      createIndex:
        type: integer
      datacenters:
        items:
          type: string
        type: array
      id:
        type: string
      jobModifyIndex:
        type: integer
      jobSummary:
        $ref: '#/definitions/structs.JobSummary'
      meta:
        additionalProperties:
          type: string
        type: object
      modifyIndex:
        type: integer
      multiregion:
        $ref: '#/definitions/structs.Multiregion'
      name:
        type: string
      namespace:
        type: string
      parameterizedJob:
        type: boolean
      parentID:
        type: string
      periodic:
        type: boolean
      priority:
        type: integer
      status:
        type: string
      statusDescription:
        type: string
      stop:
        type: boolean
      submitTime:
        type: integer
      type:
        type: string
    type: object
  structs.JobRegisterResponse:
    properties:
      evalCreateIndex:
        type: integer
      evalID:
        type: string
      index:
        description: This is the index associated with the read
        type: integer
      jobModifyIndex:
        type: integer
      knownLeader:
        description: Used to indicate if there is a known leader node
        type: boolean
      lastContact:
        allOf:
        - $ref: '#/definitions/time.Duration'
        description: |-
          If AllowStale is used, this is time elapsed since
          last contact between the follower and leader. This
          can be used to gauge staleness.
      nextToken:
        description: |-
          NextToken is the token returned with queries that support
          paginated lists. To resume paging from this point, pass
          this token in the next request's QueryOptions.
        type: string
      warnings:
        description: |-
          Warnings contains any warnings about the given job. These may include
          deprecation warnings.
        type: string
    type: object
  structs.JobSummary:
    properties:
      children:
        allOf:
        - $ref: '#/definitions/structs.JobChildrenSummary'
        description: Children contains a summary for the children of this job.
      createIndex:
        description: Raft Indexes
        type: integer
      jobID:
        description: JobID is the ID of the job the summary is for
        type: string
      modifyIndex:
        type: integer
      namespace:
        description: Namespace is the namespace of the job and its summary
        type: string
      summary:
        additionalProperties:
          $ref: '#/definitions/structs.TaskGroupSummary'
        description: Summary contains the summary per task group for the Job
        type: object
    type: object
  structs.Multiregion:
    properties:
      regions:
        items:
          $ref: '#/definitions/structs.MultiregionRegion'
        type: array
      strategy:
        $ref: '#/definitions/structs.MultiregionStrategy'
    type: object
  structs.MultiregionRegion:
    properties:
      count:
        type: integer
      datacenters:
        items:
          type: string
        type: array
      meta:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
    type: object
  structs.MultiregionStrategy:
    properties:
      maxParallel:
        type: integer
      onFailure:
        type: string
    type: object
  structs.TaskGroupSummary:
    properties:
      complete:
        type: integer
      failed:
        type: integer
      lost:
        type: integer
      queued:
        type: integer
      running:
        type: integer
      starting:
        type: integer
      unknown:
        type: integer
    type: object
  time.Duration:
    enum:
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    type: integer
    x-enum-varnames:
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
host: api.plusvasis.xyz
info:
  contact: {}
  description: API backend for PlusVasis service
  title: PlusVasis API
  version: "1.0"
paths:
  /job/{id}:
    delete:
      description: Stop a running Nomad job
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      - description: Purge job
        in: query
        name: purge
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.JobDeregisterResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: StopJob
      tags:
      - nomad
    get:
      description: Get details of a Nomad job
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.JobListStub'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: ReadJob
      tags:
      - nomad
    post:
      consumes:
      - application/json
      description: Update an existing Nomad job
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      - description: Nomad Job
        in: body
        name: job
        required: true
        schema:
          $ref: '#/definitions/plusvasis_internal_templates.NomadJob'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.JobRegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: UpdateJob
      tags:
      - nomad
  /job/{id}/exec:
    get:
      consumes:
      - application/json
      description: Execute commands in a Nomad job allocation via WebSockets
      parameters:
      - description: Allocation ID
        in: path
        name: id
        required: true
        type: string
      - description: Command to execute
        in: query
        name: command
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "502":
          description: Bad Gateway
      security:
      - BearerAuth: []
      summary: AllocExec
      tags:
      - proxy
  /job/{id}/logs:
    get:
      description: Stream logs from a Nomad job allocation
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      - description: Task name (same as job name)
        in: query
        name: task
        required: true
        type: string
      - description: Log type (stdout or stderr)
        in: query
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: StreamLogs
      tags:
      - proxy
  /job/{id}/restart:
    post:
      description: Restart a Nomad job
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.GenericResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: RestartJob
      tags:
      - nomad
  /job/{id}/start:
    get:
      description: Start a stopped Nomad job
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.JobRegisterResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: StartJob
      tags:
      - nomad
  /jobs:
    get:
      description: Get details of all Nomad jobs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.JobListStub'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: GetJobs
      tags:
      - nomad
    post:
      consumes:
      - application/json
      description: Create a new Nomad job
      parameters:
      - description: Nomad Job
        in: body
        name: job
        required: true
        schema:
          $ref: '#/definitions/plusvasis_internal_templates.NomadJob'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.JobRegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: CreateJob
      tags:
      - nomad
schemes:
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
